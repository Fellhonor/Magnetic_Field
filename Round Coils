# -*- coding: utf-8 -*-
"""
Created on Fri May  8 22:17:50 2020

@author: Fellhonor

This program is made for
calculating the magnetic field
generated by a couple of round coils.

"""

import time
import math
import numpy as np
import matplotlib.pyplot as plt

timer_start = time.perf_counter()
cof = 0.1
ts = 100

I = 200
radius = 3.5
cable_d = 0.35
cable_h = 0.35
space = 5.4
layer = 6
ring = 6

coordinate = np.linspace([0, 0, -5], [0, 0, 5], 
                         21, endpoint = True, dtype = float)
magfield = np.zeros_like(coordinate, dtype = float)

for i in range(0, ring):
    radius_temp = radius + cable_d * (i + 0.5)
    for j in range(0, layer):
        height_temp = space / 2 + cable_h * (j + 0.5)
        for k in range(0, ts):
            element_cod = np.array([radius_temp * math.cos(k * 2 * math.pi / ts),
                                    radius_temp * math.sin(k * 2 * math.pi / ts),
                                    height_temp])
            r = coordinate - element_cod
            dl = np.array([-radius_temp * 2 * math.pi / ts * math.sin(k * 2 * math.pi / ts),
                           radius_temp * 2 * math.pi / ts * math.cos(k * 2 * math.pi / ts),
                          0])
            md = np.power(np.sum(r ** 2, axis = 1), 1.5)[:, np.newaxis]
            magfield += cof * I * np.cross(dl, r) / md

for i in range(0, ring):
    radius_temp = radius + cable_d * (i + 0.5)
    for j in range(0, layer):
        height_temp = -(space / 2 + cable_h * (j + 0.5))
        for k in range(0, ts):
            element_cod = np.array([radius_temp * math.cos(k * 2 * math.pi / ts),
                                    radius_temp * math.sin(k * 2 * math.pi / ts),
                                    height_temp])
            r = coordinate - element_cod
            dl = np.array([-radius_temp * 2 * math.pi / ts * math.sin(k * 2 * math.pi / ts),
                           radius_temp * 2 * math.pi / ts * math.cos(k * 2 * math.pi / ts),
                          0])
            md = np.power(np.sum(r ** 2, axis = 1), 1.5)[:, np.newaxis]
            magfield += cof * I * np.cross(dl, r) / md
            
print(magfield)
np.savetxt('magfield.txt', magfield, fmt = '%10.3f')

plt.plot(coordinate[:, 2], magfield[:, 2], 'o')
plt.axis([-6, 6, 0, 1200])
plt.xlabel('z-coordinate (cm)')
plt.ylabel('z Magnetic Field (Gauss)')
plt.show()

timer_stop = time.perf_counter()
print('----------------')
print('Time cost: {:>10.5e}'.format(timer_start - timer_stop))
print(time.strftime('%Y-%m-%d %A %H:%M:%S'))
